{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useLayoutEffect } from \"react\";\nimport { themeColors } from \"../../config/themeColors\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { setUser } from \"../../redux/login/loginSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/app/rtkHooks\";\nimport { toggleTopBar } from \"../../redux/passenger/topBarSlice\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Settings = function Settings(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useAppDispatch();\n  var shown = useAppSelector(function (state) {\n    return state.topBar.shown;\n  });\n  var onLogout = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      yield SecureStore.setItemAsync(\"access_token\", \"\");\n      dispatch(setUser({\n        access_token: null,\n        role: null\n      }));\n    });\n    return function onLogout() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var askLogout = function askLogout() {\n    return Alert.alert(\"Attention\", \"You are about to logout\", [{\n      text: \"Cancel\",\n      onPress: function onPress() {},\n      style: \"cancel\"\n    }, {\n      text: \"Confirm\",\n      onPress: function onPress() {\n        onLogout();\n      },\n      style: \"cancel\"\n    }], {\n      cancelable: true\n    });\n  };\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Settings\",\n      headerStyle: {\n        backgroundColor: \"white\"\n      },\n      headerTintColor: themeColors.googleBlue,\n      headerTitleStyle: {\n        fontWeight: \"normal\",\n        fontSize: 14\n      },\n      headerLeft: function headerLeft() {\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginLeft: 10\n          },\n          onPress: function onPress() {\n            return navigation.toggleDrawer();\n          },\n          children: _jsx(Feather, {\n            name: \"menu\",\n            size: 25,\n            color: themeColors.googleGray\n          })\n        });\n      }\n    });\n  }, [navigation]);\n  return _jsxs(ScrollView, {\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"white\",\n      style: \"dark\"\n    }), _jsx(View, {\n      style: styles.logoutWrapper,\n      children: _jsx(View, {\n        style: styles.listHeaderWrapper,\n        children: _jsx(Pressable, {\n          android_ripple: {\n            color: \"gray\"\n          },\n          style: _objectSpread({\n            backgroundColor: themeColors.googleRed\n          }, styles.logoutButton),\n          onPress: askLogout,\n          children: _jsx(Text, {\n            style: styles.listHeaderText,\n            children: \"Logout\"\n          })\n        })\n      })\n    }), _jsx(View, {\n      style: styles.logoutWrapper,\n      children: _jsx(View, {\n        style: styles.listHeaderWrapper,\n        children: _jsx(Pressable, {\n          android_ripple: {\n            color: \"gray\"\n          },\n          style: _objectSpread({\n            backgroundColor: themeColors.googleBlue\n          }, styles.logoutButton),\n          onPress: function onPress() {\n            return dispatch(toggleTopBar());\n          },\n          children: _jsx(Text, {\n            style: styles.listHeaderText,\n            children: shown ? \"Hide Home Topbar\" : \"Show Home top bar\"\n          })\n        })\n      })\n    })]\n  });\n};\nexport default Settings;\nvar styles = StyleSheet.create({\n  logoutWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  logoutButton: {\n    padding: 5,\n    borderRadius: 3,\n    marginTop: 5,\n    width: \"90%\"\n  },\n  listHeaderText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 12,\n    textAlign: \"center\",\n    paddingVertical: 5,\n    paddingHorizontal: 12.5\n  },\n  listHeaderWrapper: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10,\n    borderRadius: 1,\n    width: Dimensions.get(\"screen\").width * 1,\n    minWidth: Dimensions.get(\"screen\").width * 1\n  }\n});","map":{"version":3,"names":["React","useLayoutEffect","themeColors","SecureStore","setUser","useAppDispatch","useAppSelector","toggleTopBar","StatusBar","Feather","Settings","navigation","dispatch","shown","state","topBar","onLogout","setItemAsync","access_token","role","askLogout","Alert","alert","text","onPress","style","cancelable","setOptions","title","headerStyle","backgroundColor","headerTintColor","googleBlue","headerTitleStyle","fontWeight","fontSize","headerLeft","marginLeft","toggleDrawer","googleGray","styles","logoutWrapper","listHeaderWrapper","color","googleRed","logoutButton","listHeaderText","StyleSheet","create","display","alignItems","justifyContent","padding","borderRadius","marginTop","width","textAlign","paddingVertical","paddingHorizontal","Dimensions","get","minWidth"],"sources":["/Users/charbelmansour/uber/src/screens/Settings/index.tsx"],"sourcesContent":["import {\n  Alert,\n  Dimensions,\n  Pressable,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\"\nimport React, { useLayoutEffect } from \"react\"\nimport { themeColors } from \"../../config/themeColors\"\nimport * as SecureStore from \"expo-secure-store\"\nimport { setUser } from \"../../redux/login/loginSlice\"\nimport { useAppDispatch, useAppSelector } from \"../../redux/app/rtkHooks\"\nimport { toggleTopBar } from \"../../redux/passenger/topBarSlice\"\nimport { StatusBar } from \"expo-status-bar\"\nimport { Feather } from \"@expo/vector-icons\"\n\nconst Settings = ({ navigation }: any) => {\n  const dispatch = useAppDispatch()\n  const shown = useAppSelector((state) => state.topBar.shown)\n  const onLogout = async () => {\n    await SecureStore.setItemAsync(\"access_token\", \"\")\n    dispatch(setUser({ access_token: null, role: null }))\n  }\n\n  const askLogout = (): void =>\n    Alert.alert(\n      \"Attention\",\n      \"You are about to logout\",\n      [\n        {\n          text: \"Cancel\",\n          onPress: (): void => {},\n          style: \"cancel\",\n        },\n        {\n          text: \"Confirm\",\n          onPress: (): void => {\n            onLogout()\n          },\n          style: \"cancel\",\n        },\n      ],\n      {\n        cancelable: true,\n      }\n    )\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Settings\",\n      headerStyle: {\n        backgroundColor: \"white\",\n      },\n      headerTintColor: themeColors.googleBlue,\n      headerTitleStyle: {\n        fontWeight: \"normal\",\n        fontSize: 14,\n      },\n      headerLeft: () => (\n        <TouchableOpacity\n          style={{ marginLeft: 10 }}\n          onPress={() => navigation.toggleDrawer()}\n        >\n          <Feather name=\"menu\" size={25} color={themeColors.googleGray} />\n        </TouchableOpacity>\n      ),\n    })\n  }, [navigation])\n\n  return (\n    <ScrollView>\n      <StatusBar backgroundColor=\"white\" style=\"dark\" />\n      <View style={styles.logoutWrapper}>\n        <View style={styles.listHeaderWrapper}>\n          <Pressable\n            android_ripple={{ color: \"gray\" }}\n            style={{\n              backgroundColor: themeColors.googleRed,\n              ...styles.logoutButton,\n            }}\n            onPress={askLogout}\n          >\n            <Text style={styles.listHeaderText}>Logout</Text>\n          </Pressable>\n        </View>\n      </View>\n\n      <View style={styles.logoutWrapper}>\n        <View style={styles.listHeaderWrapper}>\n          <Pressable\n            android_ripple={{ color: \"gray\" }}\n            style={{\n              backgroundColor: themeColors.googleBlue,\n              ...styles.logoutButton,\n            }}\n            onPress={() => dispatch(toggleTopBar())}\n          >\n            <Text style={styles.listHeaderText}>\n              {shown ? \"Hide Home Topbar\" : \"Show Home top bar\"}\n            </Text>\n          </Pressable>\n        </View>\n      </View>\n    </ScrollView>\n  )\n}\n\nexport default Settings\n\nconst styles = StyleSheet.create({\n  logoutWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  logoutButton: {\n    padding: 5,\n    borderRadius: 3,\n    marginTop: 5,\n    width: \"90%\",\n  },\n  listHeaderText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 12,\n    textAlign: \"center\",\n    paddingVertical: 5,\n    paddingHorizontal: 12.5,\n  },\n  listHeaderWrapper: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // backgroundColor: \"darkgray\",\n    marginTop: 10,\n    borderRadius: 1,\n    width: Dimensions.get(\"screen\").width * 1,\n    minWidth: Dimensions.get(\"screen\").width * 1,\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}