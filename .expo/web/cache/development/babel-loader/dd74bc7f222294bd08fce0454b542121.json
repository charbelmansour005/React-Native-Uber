{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { TextInputNumber, TextInputPass } from \"../../components\";\nimport { instance, signinUrl, roleURL } from \"../../services/api\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { useMutation } from \"react-query\";\nimport { setUser } from \"../../redux/login/loginSlice\";\nimport { useAppDispatch } from \"../../redux/app/rtkHooks\";\nimport { themeColors } from \"../../config/themeColors\";\nimport { useToast } from \"react-native-toast-notifications\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { styles } from \"./styles\";\nimport { Durations } from \"../../helpers/durations\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var isAndroid = Platform.OS === \"android\";\n  var dispatch = useAppDispatch();\n  var replace = navigation.replace;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    phoneNumber = _useState2[0],\n    setPhoneNumber = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var toast = useToast();\n  var errorToast = function errorToast(error) {\n    return toast.show(\"\" + error, {\n      placement: \"bottom\",\n      duration: Durations.LONG,\n      animationType: \"zoom-in\",\n      type: \"error\",\n      icon: _jsx(Ionicons, {\n        name: \"warning-outline\",\n        size: 10,\n        color: \"white\"\n      }),\n      textStyle: {\n        fontWeight: \"300\"\n      }\n    });\n  };\n  var _useMutation = useMutation(_asyncToGenerator(function* () {\n      var response = yield instance.post(signinUrl, {\n        phoneNumber: phoneNumber,\n        password: password\n      });\n      return response.data;\n    }), {\n      onSuccess: function () {\n        var _onSuccess = _asyncToGenerator(function* (response) {\n          yield SecureStore.setItemAsync(\"access_token\", response.access_token);\n          try {\n            var _findRoleResponse$dat, _findRoleResponse$dat2;\n            var findRoleResponse = yield instance.get(roleURL);\n            yield SecureStore.setItemAsync(\"role\", (_findRoleResponse$dat = findRoleResponse.data) == null ? void 0 : _findRoleResponse$dat.role);\n            var PersonName = (_findRoleResponse$dat2 = findRoleResponse.data) == null ? void 0 : _findRoleResponse$dat2.name;\n            yield SecureStore.setItemAsync(\"PersonName\", PersonName);\n            var role = yield SecureStore.getItemAsync(\"role\");\n            dispatch(setUser({\n              access_token: response.access_token,\n              role: role\n            }));\n          } catch (error) {\n            throw new Error(error);\n          }\n        });\n        function onSuccess(_x) {\n          return _onSuccess.apply(this, arguments);\n        }\n        return onSuccess;\n      }(),\n      onError: function onError(error) {\n        if (error.response) {\n          var message = error.response.data.message;\n          errorToast(message);\n        }\n      }\n    }),\n    mutate = _useMutation.mutate,\n    isLoggingIn = _useMutation.isLoading;\n  var onSignIn = function onSignIn() {\n    mutate();\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      backgroundColor: themeColors.googleGray,\n      style: \"light\"\n    }), _jsx(Text, {\n      style: styles.titleText,\n      children: \"Welcome back\"\n    }), _jsxs(View, {\n      style: styles.inputWrapper,\n      children: [_jsx(TextInputNumber, {\n        phoneNumber: phoneNumber,\n        setPhoneNumber: setPhoneNumber\n      }), _jsx(TextInputPass, {\n        password: password,\n        setPassword: setPassword\n      })]\n    }), _jsx(Pressable, {\n      disabled: !phoneNumber || password === \"\" || isLoggingIn,\n      android_ripple: {\n        color: \"white\"\n      },\n      style: styles.loginButton,\n      onPress: onSignIn,\n      children: isLoggingIn ? isAndroid ? _jsx(ActivityIndicator, {\n        size: \"small\",\n        color: \"white\"\n      }) : _jsx(Text, {\n        style: _objectSpread({\n          color: \"white\",\n          fontWeight: \"bold\"\n        }, styles.loadingLogin),\n        children: \"Logging in\"\n      }) : _jsx(Text, {\n        style: _objectSpread({\n          color: \"white\",\n          fontWeight: \"bold\"\n        }, styles.loadingLogin),\n        children: \"Login\"\n      })\n    }), _jsxs(View, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [_jsx(Text, {\n        style: styles.loginText,\n        children: \"Don't have an account?\"\n      }), _jsx(Text, {\n        style: styles.signupText,\n        onPress: function onPress() {\n          return replace(\"SignUp\");\n        },\n        children: \"Sign up\"\n      })]\n    })]\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","StatusBar","TextInputNumber","TextInputPass","instance","signinUrl","roleURL","SecureStore","useMutation","setUser","useAppDispatch","themeColors","useToast","Ionicons","styles","Durations","Login","navigation","isAndroid","Platform","OS","dispatch","replace","phoneNumber","setPhoneNumber","password","setPassword","toast","errorToast","error","show","placement","duration","LONG","animationType","type","icon","textStyle","fontWeight","response","post","data","onSuccess","setItemAsync","access_token","findRoleResponse","get","role","PersonName","name","getItemAsync","Error","onError","message","mutate","isLoggingIn","isLoading","onSignIn","container","googleGray","titleText","inputWrapper","color","loginButton","loadingLogin","display","flexDirection","loginText","signupText"],"sources":["/Users/charbelmansour/uber/src/screens/Login/index.tsx"],"sourcesContent":["import {\n  Text,\n  View,\n  SafeAreaView,\n  Pressable,\n  ActivityIndicator,\n  Platform,\n} from \"react-native\"\nimport React, { useState } from \"react\"\nimport { StatusBar } from \"expo-status-bar\"\nimport { TextInputNumber, TextInputPass } from \"../../components\"\nimport { RootStackParamList } from \"../../navigation/Navigation\"\nimport { StackNavigationProp } from \"@react-navigation/stack\"\nimport { instance, signinUrl, roleURL } from \"../../services/api\"\nimport * as SecureStore from \"expo-secure-store\"\nimport { useMutation } from \"react-query\"\nimport { setUser } from \"../../redux/login/loginSlice\"\nimport { useAppDispatch } from \"../../redux/app/rtkHooks\"\nimport { themeColors } from \"../../config/themeColors\"\nimport { useToast } from \"react-native-toast-notifications\"\nimport { Ionicons } from \"@expo/vector-icons\"\nimport { styles } from \"./styles\"\nimport { Durations } from \"../../helpers/durations\"\n\ntype SignUpScreenNavigationProp = StackNavigationProp<\n  RootStackParamList,\n  \"SignUp\"\n>\n\ntype Props = {\n  navigation: SignUpScreenNavigationProp\n}\n\nconst Login = ({ navigation }: Props) => {\n  const isAndroid = Platform.OS === \"android\"\n  const dispatch = useAppDispatch()\n  const { replace } = navigation\n  const [phoneNumber, setPhoneNumber] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n\n  const toast = useToast()\n\n  const errorToast = (error: any) =>\n    toast.show(`${error}`, {\n      placement: \"bottom\",\n      duration: Durations.LONG,\n      animationType: \"zoom-in\",\n      type: \"error\",\n      icon: <Ionicons name=\"warning-outline\" size={10} color=\"white\" />,\n      textStyle: { fontWeight: \"300\" },\n    })\n\n  const { mutate, isLoading: isLoggingIn } = useMutation(\n    async () => {\n      const response = await instance.post(signinUrl, {\n        phoneNumber,\n        password,\n      })\n      return response.data\n    },\n    {\n      onSuccess: async (response) => {\n        await SecureStore.setItemAsync(\"access_token\", response.access_token)\n        try {\n          const findRoleResponse = await instance.get(roleURL)\n          await SecureStore.setItemAsync(\"role\", findRoleResponse.data?.role)\n          const PersonName = findRoleResponse.data?.name\n          await SecureStore.setItemAsync(\"PersonName\", PersonName)\n          const role = await SecureStore.getItemAsync(\"role\")\n          dispatch(\n            setUser({\n              access_token: response.access_token,\n              role: role,\n            })\n          )\n        } catch (error: any) {\n          throw new Error(error)\n        }\n      },\n      onError: (error: any) => {\n        if (error.response) {\n          const message = error.response.data.message\n          errorToast(message)\n        }\n      },\n    }\n  )\n\n  const onSignIn = () => {\n    mutate()\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar backgroundColor={themeColors.googleGray} style=\"light\" />\n\n      <Text style={styles.titleText}>Welcome back</Text>\n\n      <View style={styles.inputWrapper}>\n        <TextInputNumber\n          phoneNumber={phoneNumber}\n          setPhoneNumber={setPhoneNumber}\n        />\n\n        <TextInputPass password={password} setPassword={setPassword} />\n      </View>\n\n      <Pressable\n        disabled={!phoneNumber || password === \"\" || isLoggingIn}\n        android_ripple={{ color: \"white\" }}\n        style={styles.loginButton}\n        onPress={onSignIn}\n      >\n        {isLoggingIn ? (\n          isAndroid ? (\n            <ActivityIndicator size={\"small\"} color={\"white\"} />\n          ) : (\n            <Text\n              style={{\n                color: \"white\",\n                fontWeight: \"bold\",\n                ...styles.loadingLogin,\n              }}\n            >\n              Logging in\n            </Text>\n          )\n        ) : (\n          <Text\n            style={{\n              color: \"white\",\n              fontWeight: \"bold\",\n              ...styles.loadingLogin,\n            }}\n          >\n            Login\n          </Text>\n        )}\n      </Pressable>\n\n      <View style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Text style={styles.loginText}>Don't have an account?</Text>\n        <Text style={styles.signupText} onPress={() => replace(\"SignUp\")}>\n          Sign up\n        </Text>\n      </View>\n    </SafeAreaView>\n  )\n}\n\nexport default Login\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}