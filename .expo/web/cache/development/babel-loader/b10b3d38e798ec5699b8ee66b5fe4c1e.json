{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useCallback, useEffect, useLayoutEffect, useState } from \"react\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Location from \"expo-location\";\nimport { Divider, IconButton } from \"react-native-paper\";\nimport { useAppDispatch } from \"../../redux/app/rtkHooks\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { useToast } from \"react-native-toast-notifications\";\nimport { themeColors } from \"../../config/themeColors\";\nimport { startTourAPI } from \"../../services/startTourAPI\";\nimport { fetchTours } from \"../../redux/passenger/tour/tourSlice\";\nimport { styles } from \"./styles\";\nimport { PassengerFlatlist, PassengerMapInfoModalContent } from \"../../components\";\nimport { instance } from \"../../services/api\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Durations } from \"../../helpers/durations\";\nimport { googleColors } from \"../../helpers/googleSpinner\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar initialRegion = {\n  latitude: 33.8938,\n  longitude: 35.5018,\n  latitudeDelta: 2.01,\n  longitudeDelta: 2.01\n};\nvar initialPassengerState = {\n  modalVisible: false,\n  fetchingLocation: false,\n  errorMsg: null,\n  mapRegion: initialRegion,\n  date: new Date(),\n  startDatemode: \"date\",\n  showStartDate: false,\n  startText: null,\n  startTextUI: null,\n  dateEnd: new Date(),\n  endDatemode: \"time\",\n  showEndDate: false,\n  endText: null,\n  endTextUI: null,\n  mapVisible: false,\n  mapOptionModalVisible: false,\n  username: \"\"\n};\nvar HeaderRight = function HeaderRight(_ref) {\n  var onPressAdd = _ref.onPressAdd,\n    onPressMap = _ref.onPressMap,\n    onLongPressMap = _ref.onLongPressMap,\n    onPressSendLocation = _ref.onPressSendLocation,\n    mapVisible = _ref.mapVisible;\n  return _jsxs(View, {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [mapVisible && _jsx(TouchableOpacity, {\n      onPress: onPressSendLocation,\n      children: _jsx(Feather, {\n        name: \"map-pin\",\n        size: 23,\n        color: themeColors.googleBlue,\n        style: {\n          marginRight: \"10%\"\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: onPressMap,\n      onLongPress: onLongPressMap,\n      children: _jsx(Feather, {\n        name: mapVisible ? \"eye-off\" : \"eye\",\n        size: 23,\n        color: mapVisible ? \"orange\" : themeColors.googleBlue,\n        style: {\n          marginRight: \"10%\"\n        }\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: onPressAdd,\n      children: _jsx(Feather, {\n        name: \"plus\",\n        selectable: false,\n        size: 23,\n        color: themeColors.googleBlue,\n        style: {\n          marginRight: \"5%\"\n        }\n      })\n    })]\n  });\n};\nvar Passenger = function Passenger(_ref2) {\n  var navigation = _ref2.navigation;\n  var toast = useToast();\n  var _useState = useState(initialPassengerState),\n    _useState2 = _slicedToArray(_useState, 2),\n    passengerState = _useState2[0],\n    setPassengerState = _useState2[1];\n  var dispatch = useAppDispatch();\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Home\",\n      headerStyle: {\n        backgroundColor: \"white\"\n      },\n      headerTintColor: themeColors.googleBlue,\n      headerTitleStyle: {\n        fontWeight: \"normal\",\n        fontSize: 14\n      },\n      headerLeft: function headerLeft() {\n        return _jsx(TouchableOpacity, {\n          style: {\n            marginLeft: 10\n          },\n          onPress: function onPress() {\n            return navigation.toggleDrawer();\n          },\n          children: _jsx(Feather, {\n            name: \"menu\",\n            size: 25,\n            color: themeColors.googleGray\n          })\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsx(HeaderRight, {\n          onPressAdd: function onPressAdd() {\n            return setPassengerState(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                modalVisible: true\n              });\n            });\n          },\n          onPressMap: function onPressMap() {\n            return setPassengerState(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                mapVisible: !prevState.mapVisible\n              });\n            });\n          },\n          onLongPressMap: function onLongPressMap() {\n            return setPassengerState(function (prevState) {\n              return _objectSpread(_objectSpread({}, prevState), {}, {\n                mapOptionModalVisible: true\n              });\n            });\n          },\n          onPressSendLocation: autoSendLocation,\n          mapVisible: passengerState == null ? void 0 : passengerState.mapVisible\n        });\n      }\n    });\n  }, [navigation, passengerState == null ? void 0 : passengerState.mapVisible]);\n  var onChangeStartDateTime = function onChangeStartDateTime(event, selectedDate) {\n    var currentDate = selectedDate || passengerState.date;\n    setPassengerState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        showStartDate: Platform.OS === \"ios\"\n      });\n    });\n    if (event.type == \"set\") {\n      setPassengerState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          date: currentDate\n        });\n      });\n    } else {\n      return null;\n    }\n    setPassengerState(function (prevState) {\n      var tempDate = new Date(currentDate);\n      var startText = tempDate.toISOString();\n      var formattedDate = tempDate.toLocaleDateString();\n      var formattedTime = tempDate.toLocaleTimeString();\n      var _formattedTime$split$ = formattedTime.split(\":\").slice(0, 2),\n        _formattedTime$split$2 = _slicedToArray(_formattedTime$split$, 2),\n        hours = _formattedTime$split$2[0],\n        minutes = _formattedTime$split$2[1];\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        startText: startText,\n        startTextUI: formattedDate + \" \" + hours + \":\" + minutes\n      });\n    });\n  };\n  var onChangeEndTime = function onChangeEndTime(event, selectedDate) {\n    var currentDate = selectedDate || passengerState.date;\n    setPassengerState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        showEndDate: Platform.OS === \"ios\"\n      });\n    });\n    if (event.type == \"set\") {\n\n      setPassengerState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          date: currentDate\n        });\n      });\n    } else {\n      return null;\n    }\n    setPassengerState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        dateEnd: currentDate\n      });\n    });\n    var tempDate = new Date(currentDate);\n    setPassengerState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        endText: tempDate.toISOString().split(\"T\")[1]\n      });\n    });\n    var formattedTime = tempDate.toLocaleTimeString();\n    var _formattedTime$split$3 = formattedTime.split(\":\").slice(0, 2),\n      _formattedTime$split$4 = _slicedToArray(_formattedTime$split$3, 2),\n      hours = _formattedTime$split$4[0],\n      minutes = _formattedTime$split$4[1];\n    setPassengerState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        endTextUI: hours + \":\" + minutes\n      });\n    });\n  };\n  var minDate = new Date();\n  var maxDate = new Date(\"2023-12-31T23:59:00\");\n  var showModeStart = function showModeStart(currentMode) {\n    setPassengerState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        showStartDate: true,\n        startDatemode: currentMode\n      });\n    });\n  };\n  var showModeEnd = function showModeEnd(currentMode) {\n    setPassengerState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        showEndDate: true,\n        endDatemode: currentMode\n      });\n    });\n  };\n  var autoSendLocation = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setPassengerState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          fetchingLocation: true\n        });\n      });\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== \"granted\") {\n        setPassengerState(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            errorMsg: \"Permission to access location was denied\"\n          });\n        });\n        return;\n      }\n      var location = yield Location.getCurrentPositionAsync({});\n      setPassengerState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          mapRegion: {\n            latitude: location.coords.latitude,\n            longitude: location.coords.longitude,\n            latitudeDelta: 0.001,\n            longitudeDelta: 0.001\n          }\n        });\n      });\n      try {\n        var latitude = location.coords.latitude;\n        var longitude = location.coords.longitude;\n        var body = {\n          longitude: longitude,\n          latitude: latitude\n        };\n        yield instance.post(\"/auth/updatecoordinates\", body);\n      } catch (error) {\n        setPassengerState(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            fetchingLocation: false\n          });\n        });\n        console.log(error);\n        toast.show(\"There was an error locating you\\nTrying again in 10 seconds\", {\n          placement: \"center\",\n          type: \"error\"\n        });\n        setTimeout(autoSendLocation, 10000);\n      }\n\n      setPassengerState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          fetchingLocation: false\n        });\n      });\n    });\n    return function autoSendLocation() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    dispatch(fetchTours());\n    autoSendLocation();\n  }, []);\n  var startTourHandler = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      setPassengerState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          startText: \"\",\n          endText: \"\",\n          startTextUI: \"\",\n          endTextUI: \"\",\n          modalVisible: false\n        });\n      });\n      if (passengerState.startText === \"\" || passengerState.endText === \"\") {\n        alert(\"Please enter a start date and an end time.\");\n        return;\n      }\n      try {\n        var _yield$startTourAPI = yield startTourAPI(passengerState.startText, passengerState.endText),\n          data = _yield$startTourAPI.data;\n        toast.show((data == null ? void 0 : data.message) + \"\\nA Driver will contact you soon\", {\n          placement: \"center\",\n          duration: Durations.SHORT,\n          type: \"normal\"\n        });\n        dispatch(fetchTours());\n      } catch (error) {\n        alert(error.message);\n      }\n    });\n    return function startTourHandler() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleCloseTourModal = function handleCloseTourModal() {\n    return setPassengerState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        startText: \"\",\n        endText: \"\",\n        startTextUI: \"\",\n        endTextUI: \"\",\n        modalVisible: false\n      });\n    });\n  };\n  var randomSpinnerColor = googleColors[Math.floor(Math.random() * 10)];\n  var chosenSpinnerColor = randomSpinnerColor;\n  var handleCloseMapOptionModal = useCallback(function () {\n    setPassengerState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        mapOptionModalVisible: false\n      });\n    });\n  }, [setPassengerState]);\n  var ItemSeperatorComponent = function ItemSeperatorComponent() {\n    return _jsx(View, {\n      style: {\n        marginHorizontal: \"5%\",\n        marginVertical: \"1%\"\n      },\n      children: _jsx(Divider, {\n        style: {\n          height: 1.5\n        }\n      })\n    });\n  };\n  return _jsxs(React.Fragment, {\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"white\",\n      style: \"dark\"\n    }), _jsxs(View, {\n      children: [passengerState.mapVisible && _jsxs(View, {\n        style: passengerState.fetchingLocation ? styles.blur : styles.normal,\n        children: [_jsx(MapView, {\n          style: styles.mapPassenger,\n          region: passengerState.mapRegion,\n          children: _jsx(Marker, {\n            coordinate: passengerState.mapRegion\n          })\n        }), _jsx(_Fragment, {\n          children: passengerState.fetchingLocation && _jsx(React.Fragment, {\n            children: _jsx(ActivityIndicator, {\n              size: \"small\",\n              color: chosenSpinnerColor,\n              style: {\n                position: \"absolute\",\n                left: 1,\n                right: 1,\n                top: 1,\n                bottom: 1\n              }\n            })\n          })\n        })]\n      }), _jsx(View, {\n        style: {\n          borderTopColor: \"white\",\n          borderTopWidth: 3,\n          display: \"flex\",\n          flexDirection: \"row\"\n        },\n        children: passengerState.errorMsg && _jsx(Text, {\n          children: passengerState.errorMsg\n        })\n      }), _jsx(Modal, {\n        animationType: \"fade\",\n        transparent: true,\n        visible: passengerState.modalVisible,\n        onRequestClose: function onRequestClose() {\n          setPassengerState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              modalVisible: false\n            });\n          });\n        },\n        children: _jsx(View, {\n          style: styles.modalContainer,\n          children: _jsxs(View, {\n            style: styles.modalContent,\n            children: [_jsx(Pressable, {\n              android_ripple: {\n                color: \"gray\"\n              },\n              style: styles.CalendatButtons,\n              onPress: function onPress() {\n                return showModeStart(\"date\");\n              },\n              children: _jsx(Text, {\n                style: styles.CalendarButtonsText,\n                children: \"Pick start day\"\n              })\n            }), _jsx(Pressable, {\n              android_ripple: {\n                color: \"gray\"\n              },\n              style: styles.CalendatButtons,\n              onPress: function onPress() {\n                return showModeStart(\"time\");\n              },\n              children: _jsx(Text, {\n                style: styles.CalendarButtonsText,\n                children: \"Pick start time\"\n              })\n            }), passengerState.showStartDate && _jsx(DateTimePicker, {\n              testID: \"dateTimePicker\",\n              value: passengerState.date,\n              mode: passengerState.startDatemode,\n              is24Hour: true,\n              minimumDate: minDate,\n              maximumDate: maxDate,\n              minuteInterval: 30,\n              display: \"default\",\n              onChange: onChangeStartDateTime\n            }), _jsx(Pressable, {\n              android_ripple: {\n                color: \"gray\"\n              },\n              style: styles.CalendatButtons,\n              onPress: function onPress() {\n                return showModeEnd(\"time\");\n              },\n              children: _jsx(Text, {\n                style: styles.CalendarButtonsText,\n                children: \"Pick end time\"\n              })\n            }), passengerState.showEndDate && _jsx(DateTimePicker, {\n              testID: \"dateTimePicker\",\n              value: passengerState.dateEnd,\n              mode: passengerState.endDatemode,\n              is24Hour: true,\n              display: \"default\",\n              minuteInterval: 30,\n              onChange: onChangeEndTime\n            }), passengerState.startText && _jsxs(_Fragment, {\n              children: [_jsx(View, {\n                style: {\n                  height: 1,\n                  width: \"100%\",\n                  marginHorizontal: 3,\n                  backgroundColor: \"gray\",\n                  marginVertical: 2,\n                  borderRadius: 3\n                }\n              }), _jsx(View, {\n                style: styles.ChosenData,\n                children: _jsxs(Text, {\n                  onPress: function onPress() {\n                    setPassengerState(function (prevState) {\n                      return _objectSpread(_objectSpread({}, prevState), {}, {\n                        startText: \"\",\n                        startTextUI: \"\"\n                      });\n                    });\n                  },\n                  style: {\n                    fontWeight: \"bold\",\n                    color: \"white\",\n                    textAlign: \"center\"\n                  },\n                  children: [\"Tour starts on \", passengerState.startTextUI]\n                })\n              })]\n            }), passengerState.endText && _jsx(View, {\n              style: styles.ChosenData,\n              children: _jsxs(Text, {\n                onPress: function onPress() {\n                  setPassengerState(function (prevState) {\n                    return _objectSpread(_objectSpread({}, prevState), {}, {\n                      endText: \"\",\n                      endTextUI: \"\"\n                    });\n                  });\n                },\n                style: {\n                  fontWeight: \"bold\",\n                  color: \"white\",\n                  textAlign: \"center\"\n                },\n                children: [\"Tour ends at \", passengerState.endTextUI]\n              })\n            }), _jsxs(View, {\n              style: {\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\"\n              },\n              children: [_jsx(IconButton, {\n                containerColor: \"white\",\n                icon: \"close\",\n                iconColor: themeColors.googleRed,\n                style: {\n                  marginVertical: 10,\n                  marginHorizontal: \"25%\"\n                },\n                size: 20,\n                onPress: handleCloseTourModal\n              }), _jsx(IconButton, {\n                disabled: !passengerState.startText || !passengerState.endText,\n                containerColor: \"white\",\n                icon: \"check\",\n                iconColor: themeColors.googleGreen,\n                style: {\n                  marginVertical: 10,\n                  marginHorizontal: \"25%\"\n                },\n                size: 20,\n                onPress: startTourHandler\n              })]\n            })]\n          })\n        })\n      }), _jsx(Modal, {\n        visible: passengerState.mapOptionModalVisible,\n        animationType: \"slide\",\n        transparent: true,\n        children: _jsx(PassengerMapInfoModalContent, {\n          handleCloseMapOptionModal: handleCloseMapOptionModal\n        })\n      }), _jsx(PassengerFlatlist, {\n        ItemSeperatorComponent: ItemSeperatorComponent\n      })]\n    })]\n  });\n};\nexport default Passenger;","map":{"version":3,"names":["React","useCallback","useEffect","useLayoutEffect","useState","MapView","Marker","Location","Divider","IconButton","useAppDispatch","DateTimePicker","useToast","themeColors","startTourAPI","fetchTours","styles","PassengerFlatlist","PassengerMapInfoModalContent","instance","Feather","StatusBar","Durations","googleColors","initialRegion","latitude","longitude","latitudeDelta","longitudeDelta","initialPassengerState","modalVisible","fetchingLocation","errorMsg","mapRegion","date","Date","startDatemode","showStartDate","startText","startTextUI","dateEnd","endDatemode","showEndDate","endText","endTextUI","mapVisible","mapOptionModalVisible","username","HeaderRight","onPressAdd","onPressMap","onLongPressMap","onPressSendLocation","display","flexDirection","alignItems","justifyContent","googleBlue","marginRight","Passenger","navigation","toast","passengerState","setPassengerState","dispatch","setOptions","title","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","fontSize","headerLeft","marginLeft","toggleDrawer","googleGray","headerRight","prevState","autoSendLocation","onChangeStartDateTime","event","selectedDate","currentDate","Platform","OS","type","tempDate","toISOString","formattedDate","toLocaleDateString","formattedTime","toLocaleTimeString","split","slice","hours","minutes","onChangeEndTime","minDate","maxDate","showModeStart","currentMode","showModeEnd","requestForegroundPermissionsAsync","status","location","getCurrentPositionAsync","coords","body","post","error","console","log","show","placement","setTimeout","startTourHandler","alert","data","message","duration","SHORT","handleCloseTourModal","randomSpinnerColor","Math","floor","random","chosenSpinnerColor","handleCloseMapOptionModal","ItemSeperatorComponent","marginHorizontal","marginVertical","height","blur","normal","mapPassenger","position","left","right","top","bottom","borderTopColor","borderTopWidth","modalContainer","modalContent","color","CalendatButtons","CalendarButtonsText","width","borderRadius","ChosenData","textAlign","googleRed","googleGreen"],"sources":["/Users/charbelmansour/uber/src/screens/Passenger/index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useLayoutEffect, useState } from \"react\"\nimport MapView, { Marker } from \"react-native-maps\"\nimport {\n  Modal,\n  Text,\n  View,\n  Pressable,\n  ActivityIndicator,\n  Platform,\n  TouchableOpacity,\n} from \"react-native\"\nimport * as Location from \"expo-location\"\nimport { Divider, IconButton } from \"react-native-paper\"\nimport { useAppDispatch } from \"../../redux/app/rtkHooks\"\nimport DateTimePicker from \"@react-native-community/datetimepicker\"\nimport { useToast } from \"react-native-toast-notifications\"\nimport { themeColors } from \"../../config/themeColors\"\nimport { startTourAPI } from \"../../services/startTourAPI\"\nimport { fetchTours } from \"../../redux/passenger/tour/tourSlice\"\nimport { styles } from \"./styles\"\nimport {\n  PassengerFlatlist,\n  PassengerMapInfoModalContent,\n} from \"../../components\"\nimport { instance } from \"../../services/api\"\nimport { Feather } from \"@expo/vector-icons\"\nimport { StatusBar } from \"expo-status-bar\"\nimport { Durations } from \"../../helpers/durations\"\nimport { googleColors } from \"../../helpers/googleSpinner\"\nimport { DrawerNavigationProp } from \"@react-navigation/drawer\"\nimport { RootStackParamList } from \"../../navigation/Navigation\"\n\ntype MyScreenNavigationProp = DrawerNavigationProp<RootStackParamList>\n\ninterface MyScreenProps {\n  navigation: MyScreenNavigationProp\n}\n\nconst initialRegion = {\n  latitude: 33.8938,\n  longitude: 35.5018,\n  latitudeDelta: 2.01,\n  longitudeDelta: 2.01,\n}\n\ntype Region = typeof initialRegion\n\ninterface PassengerState {\n  modalVisible: boolean\n  fetchingLocation: boolean\n  errorMsg: string | null\n  mapRegion: Region\n  date: Date\n  startDatemode: any\n  showStartDate: boolean\n  startText: string | null\n  startTextUI: string | null\n  dateEnd: Date\n  endDatemode: any\n  showEndDate: boolean\n  endText: string | null\n  endTextUI: string | null\n  mapVisible: boolean\n  mapOptionModalVisible: boolean\n  username: string\n}\n\nconst initialPassengerState: PassengerState = {\n  modalVisible: false,\n  fetchingLocation: false,\n  errorMsg: null,\n  mapRegion: initialRegion,\n  date: new Date(),\n  startDatemode: \"date\",\n  showStartDate: false,\n  startText: null,\n  startTextUI: null,\n  dateEnd: new Date(),\n  endDatemode: \"time\",\n  showEndDate: false,\n  endText: null,\n  endTextUI: null,\n  mapVisible: false,\n  mapOptionModalVisible: false,\n  username: \"\",\n}\n\ntype HeaderRightProps = {\n  onPressAdd: () => void\n  onPressMap: () => void\n  onLongPressMap: () => void\n  onPressSendLocation: () => void\n  mapVisible: boolean\n}\n\nconst HeaderRight: React.FC<HeaderRightProps> = ({\n  onPressAdd,\n  onPressMap,\n  onLongPressMap,\n  onPressSendLocation,\n  mapVisible,\n}) => {\n  return (\n    <View\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      {mapVisible && (\n        <TouchableOpacity onPress={onPressSendLocation}>\n          <Feather\n            name=\"map-pin\"\n            size={23}\n            color={themeColors.googleBlue}\n            style={{\n              marginRight: \"10%\",\n            }}\n          />\n        </TouchableOpacity>\n      )}\n      <TouchableOpacity onPress={onPressMap} onLongPress={onLongPressMap}>\n        <Feather\n          name={mapVisible ? \"eye-off\" : \"eye\"}\n          size={23}\n          color={mapVisible ? \"orange\" : themeColors.googleBlue}\n          style={{\n            marginRight: \"10%\",\n          }}\n        />\n      </TouchableOpacity>\n      <TouchableOpacity onPress={onPressAdd}>\n        <Feather\n          name=\"plus\"\n          selectable={false}\n          size={23}\n          color={themeColors.googleBlue}\n          style={{\n            marginRight: \"5%\",\n          }}\n        />\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst Passenger = ({ navigation }: MyScreenProps) => {\n  const toast = useToast()\n  const [passengerState, setPassengerState] = useState<PassengerState>(\n    initialPassengerState\n  )\n  const dispatch = useAppDispatch()\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      title: \"Home\",\n      headerStyle: {\n        backgroundColor: \"white\",\n      },\n      headerTintColor: themeColors.googleBlue,\n      headerTitleStyle: {\n        fontWeight: \"normal\",\n        fontSize: 14,\n      },\n      headerLeft: () => (\n        <TouchableOpacity\n          style={{ marginLeft: 10 }}\n          onPress={() => navigation.toggleDrawer()}\n        >\n          <Feather name=\"menu\" size={25} color={themeColors.googleGray} />\n        </TouchableOpacity>\n      ),\n      headerRight: () => (\n        <HeaderRight\n          onPressAdd={() =>\n            setPassengerState((prevState) => ({\n              ...prevState,\n              modalVisible: true,\n            }))\n          }\n          onPressMap={() =>\n            setPassengerState((prevState) => ({\n              ...prevState,\n              mapVisible: !prevState.mapVisible,\n            }))\n          }\n          onLongPressMap={() =>\n            setPassengerState((prevState) => ({\n              ...prevState,\n              mapOptionModalVisible: true,\n            }))\n          }\n          onPressSendLocation={autoSendLocation}\n          mapVisible={passengerState?.mapVisible}\n        />\n      ),\n    })\n  }, [navigation, passengerState?.mapVisible])\n\n  const onChangeStartDateTime = (event: any, selectedDate: any) => {\n    const currentDate = selectedDate || passengerState.date\n    setPassengerState((prevState) => ({\n      ...prevState,\n      showStartDate: Platform.OS === \"ios\",\n    }))\n    if (event.type == \"set\") {\n      //ok button\n      setPassengerState((prevState) => ({ ...prevState, date: currentDate }))\n    } else {\n      //cancel Button\n      return null\n    }\n    setPassengerState((prevState) => {\n      let tempDate = new Date(currentDate)\n      // to backend\n      const startText = tempDate.toISOString()\n      // to UI\n      const formattedDate = tempDate.toLocaleDateString()\n      const formattedTime = tempDate.toLocaleTimeString()\n      const [hours, minutes] = formattedTime.split(\":\").slice(0, 2)\n      return {\n        ...prevState,\n        startText,\n        startTextUI: `${formattedDate} ${hours}:${minutes}`,\n      }\n    })\n  }\n\n  const onChangeEndTime = (event: any, selectedDate: any): null | undefined => {\n    const currentDate = selectedDate || passengerState.date\n    setPassengerState((prevState) => ({\n      ...prevState,\n      showEndDate: Platform.OS === \"ios\",\n    }))\n    if (event.type == \"set\") {\n      //ok button\n\n      setPassengerState((prevState) => ({ ...prevState, date: currentDate }))\n    } else {\n      //cancel Button\n      return null\n    }\n    setPassengerState((prevState) => ({ ...prevState, dateEnd: currentDate }))\n    let tempDate = new Date(currentDate)\n    // to backend\n    setPassengerState((prevState) => ({\n      ...prevState,\n      endText: tempDate.toISOString().split(\"T\")[1],\n    }))\n    // to UI\n    const formattedTime = tempDate.toLocaleTimeString()\n    const [hours, minutes] = formattedTime.split(\":\").slice(0, 2)\n    setPassengerState((prevState) => ({\n      ...prevState,\n      endTextUI: `${hours}:${minutes}`,\n    }))\n  }\n\n  const minDate = new Date()\n  const maxDate = new Date(\"2023-12-31T23:59:00\")\n\n  const showModeStart = (currentMode: any): void => {\n    setPassengerState((prevState) => ({\n      ...prevState,\n      showStartDate: true,\n      startDatemode: currentMode,\n    }))\n  }\n  const showModeEnd = (currentMode: any): void => {\n    setPassengerState((prevState) => ({\n      ...prevState,\n      showEndDate: true,\n      endDatemode: currentMode,\n    }))\n  }\n\n  const autoSendLocation = async (): Promise<void> => {\n    setPassengerState((prevState) => ({ ...prevState, fetchingLocation: true }))\n    let { status } = await Location.requestForegroundPermissionsAsync()\n    if (status !== \"granted\") {\n      setPassengerState((prevState) => ({\n        ...prevState,\n        errorMsg: \"Permission to access location was denied\",\n      }))\n      return\n    }\n    let location = await Location.getCurrentPositionAsync({})\n    setPassengerState((prevState) => ({\n      ...prevState,\n      mapRegion: {\n        latitude: location.coords.latitude,\n        longitude: location.coords.longitude,\n        latitudeDelta: 0.001,\n        longitudeDelta: 0.001,\n      },\n    }))\n    try {\n      const latitude = location.coords.latitude\n      const longitude = location.coords.longitude\n      const body = {\n        longitude: longitude,\n        latitude: latitude,\n      }\n      await instance.post(`/auth/updatecoordinates`, body)\n    } catch (error) {\n      setPassengerState((prevState) => ({\n        ...prevState,\n        fetchingLocation: false,\n      }))\n      console.log(error)\n      toast.show(\n        \"There was an error locating you\\nTrying again in 10 seconds\",\n        {\n          placement: \"center\",\n          type: \"error\",\n        }\n      )\n      setTimeout(autoSendLocation, 10000) // auto retry after 10 seconds!\n    }\n    setPassengerState((prevState) => ({\n      ...prevState,\n      fetchingLocation: false,\n    }))\n  }\n\n  useEffect(() => {\n    dispatch(fetchTours())\n    autoSendLocation()\n  }, [])\n\n  const startTourHandler = async (): Promise<void> => {\n    setPassengerState((prevState) => ({\n      ...prevState,\n      startText: \"\",\n      endText: \"\",\n      startTextUI: \"\",\n      endTextUI: \"\",\n      modalVisible: false,\n    }))\n    if (passengerState.startText === `` || passengerState.endText === ``) {\n      alert(\"Please enter a start date and an end time.\")\n      return\n    }\n    try {\n      const { data }: any = await startTourAPI(\n        passengerState.startText,\n        passengerState.endText\n      )\n      toast.show(`${data?.message}\\nA Driver will contact you soon`, {\n        placement: \"center\",\n        duration: Durations.SHORT,\n        type: \"normal\",\n      })\n      dispatch(fetchTours())\n    } catch (error: any) {\n      alert(error.message)\n    }\n  }\n\n  const handleCloseTourModal = (): void =>\n    setPassengerState((prevState) => ({\n      ...prevState,\n      startText: \"\",\n      endText: \"\",\n      startTextUI: \"\",\n      endTextUI: \"\",\n      modalVisible: false,\n    }))\n\n  const randomSpinnerColor = googleColors[Math.floor(Math.random() * 10)]\n  const chosenSpinnerColor: string = randomSpinnerColor\n\n  const handleCloseMapOptionModal = useCallback((): void => {\n    setPassengerState((prevState) => ({\n      ...prevState,\n      mapOptionModalVisible: false,\n    }))\n  }, [setPassengerState])\n\n  const ItemSeperatorComponent = (): JSX.Element => (\n    <View style={{ marginHorizontal: \"5%\", marginVertical: \"1%\" }}>\n      <Divider style={{ height: 1.5 }} />\n    </View>\n  )\n\n  return (\n    <React.Fragment>\n      <StatusBar backgroundColor=\"white\" style=\"dark\" />\n      <View>\n        {passengerState.mapVisible && (\n          <View\n            style={\n              passengerState.fetchingLocation ? styles.blur : styles.normal\n            }\n          >\n            <MapView\n              style={styles.mapPassenger}\n              region={passengerState.mapRegion}\n            >\n              <Marker coordinate={passengerState.mapRegion} />\n            </MapView>\n            <>\n              {passengerState.fetchingLocation && (\n                <React.Fragment>\n                  <ActivityIndicator\n                    size=\"small\"\n                    color={chosenSpinnerColor}\n                    style={{\n                      position: \"absolute\",\n                      left: 1,\n                      right: 1,\n                      top: 1,\n                      bottom: 1,\n                    }}\n                  />\n                </React.Fragment>\n              )}\n            </>\n          </View>\n        )}\n        <View\n          style={{\n            borderTopColor: \"white\",\n            borderTopWidth: 3,\n            display: \"flex\",\n            flexDirection: \"row\",\n          }}\n        >\n          {passengerState.errorMsg && <Text>{passengerState.errorMsg}</Text>}\n        </View>\n        <Modal\n          animationType=\"fade\"\n          transparent={true}\n          visible={passengerState.modalVisible}\n          onRequestClose={() => {\n            setPassengerState((prevState) => ({\n              ...prevState,\n              modalVisible: false,\n            }))\n          }}\n        >\n          <View style={styles.modalContainer}>\n            <View style={styles.modalContent}>\n              {/* date start  */}\n              <Pressable\n                android_ripple={{ color: \"gray\" }}\n                style={styles.CalendatButtons}\n                onPress={() => showModeStart(\"date\")}\n              >\n                <Text style={styles.CalendarButtonsText}>Pick start day</Text>\n              </Pressable>\n              <Pressable\n                android_ripple={{ color: \"gray\" }}\n                style={styles.CalendatButtons}\n                onPress={() => showModeStart(\"time\")}\n              >\n                <Text style={styles.CalendarButtonsText}>Pick start time</Text>\n              </Pressable>\n              {passengerState.showStartDate && (\n                <DateTimePicker\n                  testID=\"dateTimePicker\"\n                  value={passengerState.date}\n                  mode={passengerState.startDatemode}\n                  is24Hour={true}\n                  minimumDate={minDate}\n                  maximumDate={maxDate}\n                  minuteInterval={30}\n                  display=\"default\"\n                  onChange={onChangeStartDateTime}\n                />\n              )}\n              <Pressable\n                android_ripple={{ color: \"gray\" }}\n                style={styles.CalendatButtons}\n                onPress={() => showModeEnd(\"time\")}\n              >\n                <Text style={styles.CalendarButtonsText}>Pick end time</Text>\n              </Pressable>\n              {passengerState.showEndDate && (\n                <DateTimePicker\n                  testID=\"dateTimePicker\"\n                  value={passengerState.dateEnd}\n                  mode={passengerState.endDatemode}\n                  is24Hour={true}\n                  display=\"default\"\n                  minuteInterval={30}\n                  onChange={onChangeEndTime}\n                />\n              )}\n              {passengerState.startText && (\n                <>\n                  <View\n                    style={{\n                      height: 1,\n                      width: \"100%\",\n                      marginHorizontal: 3,\n                      backgroundColor: \"gray\",\n                      marginVertical: 2,\n                      borderRadius: 3,\n                    }}\n                  />\n                  <View style={styles.ChosenData}>\n                    <Text\n                      onPress={() => {\n                        setPassengerState((prevState) => ({\n                          ...prevState,\n                          startText: \"\",\n                          startTextUI: \"\",\n                        }))\n                      }}\n                      style={{\n                        fontWeight: \"bold\",\n                        color: \"white\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      Tour starts on {passengerState.startTextUI}\n                    </Text>\n                  </View>\n                </>\n              )}\n              {passengerState.endText && (\n                <View style={styles.ChosenData}>\n                  <Text\n                    onPress={() => {\n                      setPassengerState((prevState) => ({\n                        ...prevState,\n                        endText: \"\",\n                        endTextUI: \"\",\n                      }))\n                    }}\n                    style={{\n                      fontWeight: \"bold\",\n                      color: \"white\",\n                      textAlign: \"center\",\n                    }}\n                  >\n                    Tour ends at {passengerState.endTextUI}\n                  </Text>\n                </View>\n              )}\n              {/* date end */}\n              <View\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <IconButton\n                  containerColor=\"white\"\n                  icon=\"close\"\n                  iconColor={themeColors.googleRed}\n                  style={{\n                    marginVertical: 10,\n                    marginHorizontal: \"25%\",\n                  }}\n                  size={20}\n                  onPress={handleCloseTourModal}\n                />\n                <IconButton\n                  disabled={\n                    !passengerState.startText || !passengerState.endText\n                  }\n                  containerColor=\"white\"\n                  icon=\"check\"\n                  iconColor={themeColors.googleGreen}\n                  style={{\n                    marginVertical: 10,\n                    marginHorizontal: \"25%\",\n                  }}\n                  size={20}\n                  onPress={startTourHandler}\n                />\n              </View>\n            </View>\n          </View>\n        </Modal>\n        {/* options modal  */}\n        <Modal\n          visible={passengerState.mapOptionModalVisible}\n          animationType=\"slide\"\n          transparent={true}\n        >\n          <PassengerMapInfoModalContent\n            handleCloseMapOptionModal={handleCloseMapOptionModal}\n          />\n        </Modal>\n        {/* passenger flatlist  */}\n        <PassengerFlatlist ItemSeperatorComponent={ItemSeperatorComponent} />\n      </View>\n    </React.Fragment>\n  )\n}\n\nexport default Passenger\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}