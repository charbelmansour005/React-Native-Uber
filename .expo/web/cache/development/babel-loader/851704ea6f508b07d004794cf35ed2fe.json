{"ast":null,"code":"import React from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { IconButton } from \"react-native-paper\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { useAppSelector } from \"../redux/app/rtkHooks\";\nimport { themeColors } from \"../config/themeColors\";\nimport { Landing, Welcome, SignUp, Login, Driver, Passenger, Intro } from \"../screens\";\nimport Settings from \"../screens/Settings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar Navigation = function Navigation() {\n  var access_token = useAppSelector(function (state) {\n    var _state$user$user;\n    return (_state$user$user = state.user.user) == null ? void 0 : _state$user$user.access_token;\n  });\n  var role = useAppSelector(function (state) {\n    var _state$user$user2;\n    return (_state$user$user2 = state.user.user) == null ? void 0 : _state$user$user2.role;\n  });\n  var shown = useAppSelector(function (state) {\n    return state.topBar.shown;\n  });\n  var handlePress = function handlePress() {\n    Linking.openURL(\"https://www.google.com/maps/\");\n  };\n  var HomeStack = function HomeStack() {\n    return _jsxs(Stack.Navigator, {\n      initialRouteName: \"Welcome\",\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Welcome\",\n        component: Welcome\n      }), _jsx(Stack.Screen, {\n        name: \"Intro\",\n        component: Intro,\n        options: {\n          animation: \"fade_from_bottom\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"SignUp\",\n        component: SignUp,\n        options: {\n          title: \"Join us\",\n          headerShown: true,\n          gestureDirection: \"vertical\",\n          animation: \"slide_from_bottom\",\n          headerStyle: {\n            backgroundColor: themeColors.googleGray\n          },\n          headerTintColor: \"white\",\n          headerTitleStyle: {\n            fontWeight: \"bold\"\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false,\n          gestureDirection: \"horizontal\",\n          animation: \"slide_from_right\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Landing\",\n        component: Landing,\n        options: {\n          title: \"\",\n          headerShown: true,\n          gestureDirection: \"horizontal\",\n          animation: \"slide_from_bottom\",\n          headerStyle: {\n            backgroundColor: themeColors.googleLightGray\n          },\n          headerTintColor: \"white\",\n          headerTitleStyle: {\n            fontWeight: \"bold\"\n          },\n          headerRight: function headerRight() {\n            return _jsx(_Fragment, {\n              children: _jsx(IconButton, {\n                icon: \"information-outline\",\n                iconColor: themeColors.googleGray,\n                size: 24,\n                onPress: handlePress\n              })\n            });\n          },\n          headerLeft: function headerLeft() {\n            return _jsx(_Fragment, {});\n          }\n        }\n      })]\n    });\n  };\n  return _jsx(NavigationContainer, {\n    children: access_token == null ? _jsx(HomeStack, {}) : _jsx(_Fragment, {\n      children: _jsxs(Drawer.Navigator, {\n        initialRouteName: role === \"passenger\" ? \"passenger\" : \"driver\",\n        children: [role === \"passenger\" && _jsx(Drawer.Screen, {\n          name: \"Passenger\",\n          component: Passenger,\n          options: {\n            headerShown: shown ? true : false\n          }\n        }), role === \"driver\" && _jsx(Drawer.Screen, {\n          name: \"Driver\",\n          component: Driver\n        }), _jsx(Drawer.Screen, {\n          name: \"Settings\",\n          component: Settings\n        })]\n      })\n    })\n  });\n};\nexport default Navigation;","map":{"version":3,"names":["React","createNativeStackNavigator","createDrawerNavigator","NavigationContainer","IconButton","useAppSelector","themeColors","Landing","Welcome","SignUp","Login","Driver","Passenger","Intro","Settings","Stack","Drawer","Navigation","access_token","state","user","role","shown","topBar","handlePress","Linking","openURL","HomeStack","headerShown","animation","title","gestureDirection","headerStyle","backgroundColor","googleGray","headerTintColor","headerTitleStyle","fontWeight","googleLightGray","headerRight","headerLeft"],"sources":["/Users/charbelmansour/uber/src/navigation/Navigation.tsx"],"sourcesContent":["import React from \"react\"\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\"\nimport { createDrawerNavigator } from \"@react-navigation/drawer\"\nimport { NavigationContainer } from \"@react-navigation/native\"\nimport { IconButton } from \"react-native-paper\"\nimport { Linking } from \"react-native\"\nimport { useAppSelector } from \"../redux/app/rtkHooks\"\nimport { themeColors } from \"../config/themeColors\"\nimport {\n  Landing,\n  Welcome,\n  SignUp,\n  Login,\n  Driver,\n  Passenger,\n  Intro,\n} from \"../screens\"\nimport Settings from \"../screens/Settings\"\n\nexport type RootStackParamList = {\n  Landing: undefined\n  Welcome: undefined\n  SignUp: undefined\n  Login: undefined\n  Driver: undefined\n  Passenger: undefined\n  Intro: undefined\n}\n\nconst Stack = createNativeStackNavigator<RootStackParamList>()\nconst Drawer = createDrawerNavigator()\n\nconst Navigation = () => {\n  const access_token = useAppSelector((state) => state.user.user?.access_token)\n  const role = useAppSelector((state) => state.user.user?.role)\n  const shown = useAppSelector((state) => state.topBar.shown)\n\n  const handlePress = () => {\n    Linking.openURL(\"https://www.google.com/maps/\")\n  }\n\n  const HomeStack = () => {\n    return (\n      <Stack.Navigator\n        initialRouteName=\"Welcome\"\n        screenOptions={{ headerShown: false }}\n      >\n        <Stack.Screen name=\"Welcome\" component={Welcome} />\n\n        <Stack.Screen\n          name=\"Intro\"\n          component={Intro}\n          options={{ animation: \"fade_from_bottom\" }}\n        />\n\n        <Stack.Screen\n          name=\"SignUp\"\n          component={SignUp}\n          options={{\n            title: \"Join us\",\n            headerShown: true,\n            gestureDirection: \"vertical\",\n            animation: \"slide_from_bottom\",\n            headerStyle: {\n              backgroundColor: themeColors.googleGray,\n            },\n            headerTintColor: \"white\",\n            headerTitleStyle: {\n              fontWeight: \"bold\",\n            },\n          }}\n        />\n\n        <Stack.Screen\n          name=\"Login\"\n          component={Login}\n          options={{\n            headerShown: false,\n            gestureDirection: \"horizontal\",\n            animation: \"slide_from_right\",\n          }}\n        />\n\n        <Stack.Screen\n          name=\"Landing\"\n          component={Landing}\n          options={{\n            title: \"\",\n            headerShown: true,\n            gestureDirection: \"horizontal\",\n            animation: \"slide_from_bottom\",\n            headerStyle: {\n              backgroundColor: themeColors.googleLightGray,\n            },\n            headerTintColor: \"white\",\n            headerTitleStyle: {\n              fontWeight: \"bold\",\n            },\n            headerRight: () => (\n              <>\n                <IconButton\n                  icon=\"information-outline\"\n                  iconColor={themeColors.googleGray}\n                  size={24}\n                  onPress={handlePress}\n                />\n              </>\n            ),\n            headerLeft: () => <></>,\n          }}\n        />\n      </Stack.Navigator>\n    )\n  }\n\n  return (\n    <NavigationContainer>\n      {access_token == null ? (\n        <HomeStack />\n      ) : (\n        <>\n          <Drawer.Navigator\n            initialRouteName={role === \"passenger\" ? \"passenger\" : \"driver\"}\n          >\n            {role === \"passenger\" && (\n              <Drawer.Screen\n                name=\"Passenger\"\n                component={Passenger}\n                options={{ headerShown: shown ? true : false }}\n              />\n            )}\n            {role === \"driver\" && (\n              <Drawer.Screen name=\"Driver\" component={Driver} />\n            )}\n            <Drawer.Screen name=\"Settings\" component={Settings} />\n          </Drawer.Navigator>\n        </>\n      )}\n    </NavigationContainer>\n  )\n}\n\nexport default Navigation\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}