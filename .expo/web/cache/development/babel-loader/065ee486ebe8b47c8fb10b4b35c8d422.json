{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport \"react-native-gesture-handler\";\nimport { ToastProvider } from \"react-native-toast-notifications\";\nimport Navigation from \"./src/navigation/Navigation\";\nimport { Provider } from \"react-redux\";\nimport store from \"./src/redux/app/store\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport { instance } from \"./src/services/api\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar queryClient = new QueryClient();\nexport default function App() {\n  instance.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n  instance.interceptors.request.use(function () {\n    var _ref = _asyncToGenerator(function* (config) {\n      var token = yield SecureStore.getItemAsync(\"access_token\");\n      if (token) {\n        config.headers.Authorization = \"Bearer \" + token;\n      }\n      return config;\n    });\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  return _jsx(ToastProvider, {\n    successColor: \"#28a47c\",\n    children: _jsx(Provider, {\n      store: store,\n      children: _jsx(QueryClientProvider, {\n        client: queryClient,\n        children: _jsx(Navigation, {})\n      })\n    })\n  });\n}","map":{"version":3,"names":["ToastProvider","Navigation","Provider","store","QueryClientProvider","QueryClient","instance","SecureStore","queryClient","App","defaults","headers","post","interceptors","request","use","config","token","getItemAsync","Authorization"],"sources":["/Users/charbelmansour/uber/App.tsx"],"sourcesContent":["import \"react-native-gesture-handler\"\nimport { ToastProvider } from \"react-native-toast-notifications\"\nimport Navigation from \"./src/navigation/Navigation\"\nimport { Provider } from \"react-redux\"\nimport store from \"./src/redux/app/store\"\nimport { QueryClientProvider, QueryClient } from \"react-query\"\nimport { instance } from \"./src/services/api\"\nimport * as SecureStore from \"expo-secure-store\"\n\nconst queryClient = new QueryClient()\n\nexport default function App() {\n  instance.defaults.headers.post[\"Content-Type\"] = \"application/json\"\n\n  instance.interceptors.request.use(async (config) => {\n    const token = await SecureStore.getItemAsync(\"access_token\")\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n  })\n  return (\n    <ToastProvider successColor=\"#28a47c\">\n      <Provider store={store}>\n        <QueryClientProvider client={queryClient}>\n          <Navigation />\n        </QueryClientProvider>\n      </Provider>\n    </ToastProvider>\n  )\n}\n"],"mappings":";AAAA,OAAO,8BAA8B;AACrC,SAASA,aAAa,QAAQ,kCAAkC;AAChE,OAAOC,UAAU;AACjB,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK;AACZ,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,aAAa;AAC9D,SAASC,QAAQ;AACjB,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAA;AAEhD,IAAMC,WAAW,GAAG,IAAIH,WAAW,EAAE;AAErC,eAAe,SAASI,GAAG,GAAG;EAC5BH,QAAQ,CAACI,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,GAAG,kBAAkB;EAEnEN,QAAQ,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG;IAAA,6BAAC,WAAOC,MAAM,EAAK;MAClD,IAAMC,KAAK,SAASV,WAAW,CAACW,YAAY,CAAC,cAAc,CAAC;MAC5D,IAAID,KAAK,EAAE;QACTD,MAAM,CAACL,OAAO,CAACQ,aAAa,eAAaF,KAAO;MAClD;MACA,OAAOD,MAAM;IACf,CAAC;IAAA;MAAA;IAAA;EAAA,IAAC;EACF,OACE,KAAC,aAAa;IAAC,YAAY,EAAC,SAAS;IAAA,UACnC,KAAC,QAAQ;MAAC,KAAK,EAAEb,KAAM;MAAA,UACrB,KAAC,mBAAmB;QAAC,MAAM,EAAEK,WAAY;QAAA,UACvC,KAAC,UAAU;MAAG;IACM;EACb,EACG;AAEpB"},"metadata":{},"sourceType":"module"}